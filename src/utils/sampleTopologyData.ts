
import { Asset } from "@/lib/db/types";

// Sample assets data with proper typing
export const generateDetailedSampleAssets = (): Asset[] => {
  return [
    {
      mac_address: "00:1a:2b:3c:4d:5e",
      name: "Main Router",
      device_type: "Router",
      src_ip: "192.168.1.1",
      ip_address: "192.168.1.1",
      vendor: "Cisco",
      first_seen: new Date(Date.now() - 86400000 * 30).toISOString(),
      last_seen: new Date().toISOString(),
      eth_proto: "IPv4",
      icmp: false,
      experience: "Excellent" as const,
      technology: "Ethernet",
      signal_strength: null,
      channel: null,
      usage_mb: 2500,
      download_bps: 50000000,
      upload_bps: 25000000,
      uptime: "30 days",
      channel_width: null,
      noise_floor: null,
      tx_rate: null,
      rx_rate: null,
      tx_power: null,
      distance: null,
      ccq: null,
      airtime: null,
      connection: "Wired",
      network: "LAN",
      wifi: null,
    },
    {
      mac_address: "aa:bb:cc:dd:ee:ff",
      name: "WiFi Access Point",
      device_type: "Access Point",
      src_ip: "192.168.1.10",
      ip_address: "192.168.1.10",
      vendor: "Ubiquiti",
      first_seen: new Date(Date.now() - 86400000 * 15).toISOString(),
      last_seen: new Date(Date.now() - 3600000).toISOString(),
      eth_proto: "IPv4",
      icmp: false,
      experience: "Good" as const,
      technology: "802.11ac",
      signal_strength: -45,
      channel: "6",
      usage_mb: 150,
      download_bps: 1000000,
      upload_bps: 500000,
      uptime: "15 days",
      channel_width: "80MHz",
      noise_floor: -95,
      tx_rate: 866,
      rx_rate: 433,
      tx_power: 20,
      distance: 25,
      ccq: 85,
      airtime: 15,
      connection: "Wireless",
      network: "WLAN",
      wifi: "802.11ac",
    },
    {
      mac_address: "11:22:33:44:55:66",
      name: "Network Switch",
      device_type: "Switch",
      src_ip: "192.168.1.20",
      ip_address: "192.168.1.20",
      vendor: "Netgear",
      first_seen: new Date(Date.now() - 86400000 * 7).toISOString(),
      last_seen: new Date(Date.now() - 7200000).toISOString(),
      eth_proto: "IPv4",
      icmp: false,
      experience: "Fair" as const,
      technology: "Gigabit Ethernet",
      signal_strength: null,
      channel: null,
      usage_mb: 500,
      download_bps: 10000000,
      upload_bps: 8000000,
      uptime: "7 days",
      channel_width: null,
      noise_floor: null,
      tx_rate: null,
      rx_rate: null,
      tx_power: null,
      distance: null,
      ccq: null,
      airtime: null,
      connection: "Wired",
      network: "LAN",
      wifi: null,
    },
    {
      mac_address: "ff:ee:dd:cc:bb:aa",
      name: "Legacy Printer",
      device_type: "Printer",
      src_ip: "192.168.1.100",
      ip_address: "192.168.1.100",
      vendor: "HP",
      first_seen: new Date(Date.now() - 86400000 * 2).toISOString(),
      last_seen: new Date(Date.now() - 14400000).toISOString(),
      eth_proto: "IPv4",
      icmp: true,
      experience: "Poor" as const,
      technology: "Fast Ethernet",
      signal_strength: null,
      channel: null,
      usage_mb: 10,
      download_bps: 100000,
      upload_bps: 50000,
      uptime: "2 days",
      channel_width: null,
      noise_floor: null,
      tx_rate: null,
      rx_rate: null,
      tx_power: null,
      distance: null,
      ccq: null,
      airtime: null,
      connection: "Wired",
      network: "LAN",
      wifi: null,
    }
  ];
};

export const generateRealisticNetworkDevices = () => {
  return [
    {
      id: 1,
      name: "Core-Router-001",
      device_type: "Router",
      ip_address: "192.168.1.1",
      mac_address: "00:1a:2b:3c:4d:5e",
      vendor: "Cisco",
      status: "active",
      connected: 24,
      experience: "Excellent" as const,
      usage_24hr: "2.5 TB",
      download: "1.2 GB",
      upload: "800 MB",
      first_seen: new Date(Date.now() - 86400000 * 30).toISOString(),
      last_seen: new Date().toISOString(),
      download_bps: 50000000,
      upload_bps: 25000000,
      usage_mb: 2500000,
      bandwidth_utilization: 45,
      port_count: 48,
    },
    {
      id: 2,
      name: "Access-Switch-001",
      device_type: "Switch",
      ip_address: "192.168.1.10",
      mac_address: "aa:bb:cc:dd:ee:ff",
      vendor: "Ubiquiti",
      status: "active",
      connected: 12,
      experience: "Good" as const,
      usage_24hr: "150 GB",
      download: "75 GB",
      upload: "45 GB",
      first_seen: new Date(Date.now() - 86400000 * 15).toISOString(),
      last_seen: new Date(Date.now() - 3600000).toISOString(),
      download_bps: 1000000,
      upload_bps: 500000,
      usage_mb: 150000,
      bandwidth_utilization: 25,
      port_count: 24,
    },
    {
      id: 3,
      name: "Distribution-Switch-001",
      device_type: "Switch",
      ip_address: "192.168.1.20",
      mac_address: "11:22:33:44:55:66",
      vendor: "Netgear",
      status: "active",
      connected: 8,
      experience: "Fair" as const,
      usage_24hr: "500 GB",
      download: "250 GB",
      upload: "180 GB",
      first_seen: new Date(Date.now() - 86400000 * 7).toISOString(),
      last_seen: new Date(Date.now() - 7200000).toISOString(),
      download_bps: 10000000,
      upload_bps: 8000000,
      usage_mb: 500000,
      bandwidth_utilization: 60,
      port_count: 48,
    }
  ];
};
